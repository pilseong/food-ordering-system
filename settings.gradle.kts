/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 * For more detailed information on multi-project builds, please refer to https://docs.gradle.org/8.5/userguide/building_swift_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the foojay-resolver plugin to allow automatic download of JDKs
    id("org.gradle.toolchains.foojay-resolver-convention") version "0.7.0"
}

rootProject.name = "food-ordering-system"
include(":common-domain")
include(":common-controller")
include(":common-utils")
include(":common-dataaccess")
include(":customer-service")

include(":order-domain-core")
include(":order-domain-application-service")
include(":order-dataaccess")
include(":order-controller")
include(":order-messaging")
include(":order-app")

include(":kafka-config-data")
include(":kafka-model")
include(":kafka-producer")
include(":kafka-consumer")

include(":payment-domain-core")
include(":payment-domain-application-service")
include(":payment-dataaccess")
include(":payment-messaging")
include(":payment-app")

include(":restaurant-domain-core")
include(":restaurant-domain-application-service")
include(":restaurant-dataaccess")
include(":restaurant-messaging")
include(":restaurant-app")

include(":saga")

include(":outbox")



project(":common-domain").projectDir =
    file("common/common-domain")
project(":common-controller").projectDir =
    file("common/common-controller")
project(":common-utils").projectDir =
    file("common/common-utils")
project(":common-dataaccess").projectDir =
    file("common/common-dataaccess")

project(":customer-service").projectDir =
    file("customer-service")

project(":order-domain-core").projectDir =
    file("order-service/order-domain/order-domain-core")
project(":order-domain-application-service").projectDir =
    file("order-service/order-domain/order-domain-application-service")
project(":order-dataaccess").projectDir =
    file("order-service/order-dataaccess")
project(":order-controller").projectDir =
    file("order-service/order-controller")
project(":order-messaging").projectDir =
    file("order-service/order-messaging")
project(":order-app").projectDir =
    file("order-service/order-app")

project(":kafka-config-data").projectDir =
    file("infrastructure/kafka/kafka-config-data")
project(":kafka-model").projectDir =
    file("infrastructure/kafka/kafka-model")
project(":kafka-producer").projectDir =
    file("infrastructure/kafka/kafka-producer")
project(":kafka-consumer").projectDir =
    file("infrastructure/kafka/kafka-consumer")

project(":payment-domain-core").projectDir =
    file("payment-service/payment-domain/payment-domain-core")
project(":payment-domain-application-service").projectDir =
    file("payment-service/payment-domain/payment-domain-application-service")
project(":payment-dataaccess").projectDir =
    file("payment-service/payment-dataaccess")
project(":payment-messaging").projectDir =
    file("payment-service/payment-messaging")
project(":payment-app").projectDir =
    file("payment-service/payment-app")

project(":restaurant-domain-core").projectDir =
    file("restaurant-service/restaurant-domain/restaurant-domain-core")
project(":restaurant-domain-application-service").projectDir =
    file("restaurant-service/restaurant-domain/restaurant-domain-application-service")
project(":restaurant-dataaccess").projectDir =
    file("restaurant-service/restaurant-dataaccess")
project(":restaurant-messaging").projectDir =
    file("restaurant-service/restaurant-messaging")
project(":restaurant-app").projectDir =
    file("restaurant-service/restaurant-app")



project(":saga").projectDir =
    file("infrastructure/saga")

project(":outbox").projectDir =
    file("infrastructure/outbox")